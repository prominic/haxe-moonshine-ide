/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    actionScripts.plugins.help.view
 *  Class:      VisualEditorView
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineDESKTOPevolved/src/actionScripts/plugins/help/view/VisualEditorView.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:13:58 MSK
 */

package actionScripts.plugins.help.view;

import mx.events.FlexEvent;
import spark.events.IndexChangeEvent;
import actionScripts.plugin.actionscript.as3project.vo.AS3ProjectVO;
import actionScripts.plugins.help.view.events.VisualEditorViewChangeEvent;
import actionScripts.ui.editor.text.TextEditor;
import utils.VisualEditorType;

import actionScripts.ui.tabNavigator.TabBarWithScroller;
import components.skins.EditorTabBarSkin;
import components.skins.StartStopButtonSkin;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.collections.IList;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.Mx_internal;

import mx.filters.*;
import mx.states.AddItems;
import mx.states.SetProperty;
import mx.states.State;
import mx.styles.*;
import spark.components.ButtonBarButton;
import spark.components.Group;
import spark.components.NavigatorContent;
import spark.components.Scroller;
import spark.components.VGroup;
import spark.containers.Navigator;

import view.VisualEditor;

@:meta(Event(name = 'codeChange', type = 'actionScripts.plugins.help.view.events.VisualEditorViewChangeEvent'))
@:meta(Event(name = 'startPreview', type = 'flash.events.Event'))
@:meta(States(name = 'flexVisualEditor', name = 'primeFacesVisualEditor', name = 'primeFacesPreviewStarting'))
class VisualEditorView extends spark.components.VGroup implements mx.binding.IBindingClient implements mx.core.IStateClient2 {

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_ButtonBarButton1:spark.components.ButtonBarButton;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_Group2:spark.components.Group;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_SetProperty1:mx.states.SetProperty;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_SetProperty2:mx.states.SetProperty;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_SetProperty3:mx.states.SetProperty;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_SetProperty4:mx.states.SetProperty;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _VisualEditorView_SetProperty5:mx.states.SetProperty;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var codeContentGroup:spark.components.Group;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var tabBar:actionScripts.ui.tabNavigator.TabBarWithScroller;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var viewStack:spark.containers.Navigator;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var visualEditor:view.VisualEditor;

	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		var bindings:Array<Dynamic> = _VisualEditorView_bindingsSetup();
		var watchers:Array<Dynamic> = [];

		var target:Dynamic = this;

		if (_watcherSetupUtil == null) {
			var watcherSetupUtilClass:Dynamic = Type.resolveClass('_actionScripts_plugins_help_view_VisualEditorViewWatcherSetupUtil');
			Reflect.field(watcherSetupUtilClass, 'init')(null);
		}

		_watcherSetupUtil.setup(this,
				function(propertyName:String):Dynamic {
					return Reflect.field(target, propertyName);
				},
				function(propertyName:String):Dynamic {
					return Reflect.getProperty(VisualEditorView, propertyName);
				},
				bindings,
				watchers
		);

		// mx_internal::_bindings =  //  mx_internal::_bindings.concat(bindings);
		// mx_internal::_watchers =  //  mx_internal::_watchers.concat(watchers);

		// layer initializers

		// properties
		this.mxmlContent = [_VisualEditorView_Navigator1_i(), _VisualEditorView_Group2_i()];
		this.currentState = 'flexVisualEditor';

		// events

		var _VisualEditorView_ButtonBarButton1_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_VisualEditorView_ButtonBarButton1_i);

		states = [
				new State({
					'name': 'flexVisualEditor',
					'overrides': [
					_VisualEditorView_SetProperty1 = mx.states.SetProperty(new mx.states.SetProperty().initializeFromObject({
												'target': 'visualEditor',
												'name': 'visualEditorType',
												'value': null
											}))
			]
				}),
				new State({
					'name': 'primeFacesVisualEditor',
					'stateGroups': ['primeFaces'],
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _VisualEditorView_ButtonBarButton1_factory,
								'destination': '_VisualEditorView_Group2',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['tabBar']
							}),
					_VisualEditorView_SetProperty3 = mx.states.SetProperty(new mx.states.SetProperty().initializeFromObject({
												'target': 'visualEditor',
												'name': 'visualEditorType',
												'value': null
											})),
					_VisualEditorView_SetProperty4 = mx.states.SetProperty(new mx.states.SetProperty().initializeFromObject({
												'target': '_VisualEditorView_ButtonBarButton1',
												'name': 'label',
												'value': null
											})),
					new mx.states.SetProperty().initializeFromObject({
								'target': '_VisualEditorView_ButtonBarButton1',
								'name': 'selected',
								'value': false
							})
			]
				}),
				new State({
					'name': 'primeFacesPreviewStarting',
					'stateGroups': ['primeFaces'],
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _VisualEditorView_ButtonBarButton1_factory,
								'destination': '_VisualEditorView_Group2',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['tabBar']
							}),
					_VisualEditorView_SetProperty2 = mx.states.SetProperty(new mx.states.SetProperty().initializeFromObject({
												'target': 'visualEditor',
												'name': 'visualEditorType',
												'value': null
											})),
					_VisualEditorView_SetProperty5 = mx.states.SetProperty(new mx.states.SetProperty().initializeFromObject({
												'target': '_VisualEditorView_ButtonBarButton1',
												'name': 'label',
												'value': null
											})),
					new mx.states.SetProperty().initializeFromObject({
								'target': '_VisualEditorView_ButtonBarButton1',
								'name': 'enabled',
								'value': false
							}),
					new mx.states.SetProperty().initializeFromObject({
								'target': '_VisualEditorView_ButtonBarButton1',
								'name': 'selected',
								'value': true
							})
			]
				})
		];

		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_SetProperty1', _VisualEditorView_SetProperty1);
		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_SetProperty3', _VisualEditorView_SetProperty3);
		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_SetProperty4', _VisualEditorView_SetProperty4);
		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_SetProperty2', _VisualEditorView_SetProperty2);
		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_SetProperty5', _VisualEditorView_SetProperty5);

		for (i in 0...bindings.length) {
			AS3.as(bindings[i], Binding).execute();
		}

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings

		return factory;
	}

	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	private var _codeEditor:TextEditor;

	@:meta(Bindable())
	public var visualEditorProject:AS3ProjectVO;

	public var codeEditor(never, set):TextEditor;
	private function set_codeEditor(value:TextEditor):TextEditor {
		_codeEditor = value;
		return value;
	}

	private function onContentGroupCreationComplete(event:FlexEvent):Void {
		codeContentGroup.addElement(_codeEditor);
	}

	private function onTabBarChange(event:IndexChangeEvent):Void {
		if (event.newIndex == 1) {
			//visualEditor.editingSurface.selectedItem = null;
			visualEditor.editingSurface.setResizerVisible(false);
			dispatchEvent(new VisualEditorViewChangeEvent(VisualEditorViewChangeEvent.CODE_CHANGE));
		} else {
			visualEditor.editingSurface.setResizerVisible(true);
		}
	}

	private function onStartPreviewClick(event:MouseEvent):Void {
		dispatchEvent(new Event('startPreview'));
	}

	//  supporting function definitions for properties, events, styles, effects
	private function _VisualEditorView_Navigator1_i():spark.containers.Navigator {
		var temp:spark.containers.Navigator = new spark.containers.Navigator();
		temp.percentWidth = 100.0;
		temp.percentHeight = 100.0;
		temp.creationPolicy = 'all';
		temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_VisualEditorView_Array5_c);
		temp.id = 'viewStack';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		viewStack = temp;
		mx.binding.BindingManager.executeBindings(this, 'viewStack', viewStack);
		return temp;
	}

	private function _VisualEditorView_Array5_c():Array<Dynamic> {
		var temp:Array<NavigatorContent> = [_VisualEditorView_NavigatorContent1_c(), _VisualEditorView_NavigatorContent2_c()];
		return cast temp;
	}

	private function _VisualEditorView_NavigatorContent1_c():spark.components.NavigatorContent {
		var temp:spark.components.NavigatorContent = new spark.components.NavigatorContent();
		temp.label = 'Visual';
		temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_VisualEditorView_Array6_c);
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _VisualEditorView_Array6_c():Array<Dynamic> {
		var temp:Array<VisualEditor> = [_VisualEditorView_VisualEditor1_i()];
		return cast temp;
	}

	private function _VisualEditorView_VisualEditor1_i():view.VisualEditor {
		var temp:view.VisualEditor = new view.VisualEditor();
		temp.percentWidth = 100;
		temp.percentHeight = 100;
		temp.right = 0;
		temp.left = 0;
		temp.id = 'visualEditor';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		visualEditor = temp;
		mx.binding.BindingManager.executeBindings(this, 'visualEditor', visualEditor);
		return temp;
	}

	private function _VisualEditorView_NavigatorContent2_c():spark.components.NavigatorContent {
		var temp:spark.components.NavigatorContent = new spark.components.NavigatorContent();
		temp.label = 'Code';
		temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_VisualEditorView_Array7_c);
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _VisualEditorView_Array7_c():Array<Dynamic> {
		var temp:Array<Scroller> = [_VisualEditorView_Scroller1_c()];
		return cast temp;
	}

	private function _VisualEditorView_Scroller1_c():spark.components.Scroller {
		var temp:spark.components.Scroller = new spark.components.Scroller();
		temp.percentWidth = 100.0;
		temp.percentHeight = 100.0;
		temp.viewport = _VisualEditorView_Group1_i();
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _VisualEditorView_Group1_i():spark.components.Group {
		var temp:spark.components.Group = new spark.components.Group();
		temp.addEventListener('creationComplete', __codeContentGroup_creationComplete);
		temp.id = 'codeContentGroup';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		codeContentGroup = temp;
		mx.binding.BindingManager.executeBindings(this, 'codeContentGroup', codeContentGroup);
		return temp;
	}

	/**
	 * @private
	 **/
	public function __codeContentGroup_creationComplete(event:mx.events.FlexEvent):Void {
		onContentGroupCreationComplete(event);
	}

	private function _VisualEditorView_Group2_i():spark.components.Group {
		var temp:spark.components.Group = new spark.components.Group();
		temp.percentWidth = 100;
		temp.mxmlContent = [_VisualEditorView_TabBarWithScroller1_i()];
		temp.id = '_VisualEditorView_Group2';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_VisualEditorView_Group2 = temp;
		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_Group2', _VisualEditorView_Group2);
		return temp;
	}

	private function _VisualEditorView_TabBarWithScroller1_i():actionScripts.ui.tabNavigator.TabBarWithScroller {
		var temp:actionScripts.ui.tabNavigator.TabBarWithScroller = new actionScripts.ui.tabNavigator.TabBarWithScroller();
		temp.left = 0;
		temp.setStyle('fontSize', 11);
		temp.setStyle('fontFamily', 'DejaVuSans');
		temp.setStyle('color', 15658734);
		temp.setStyle('skinClass', components.skins.EditorTabBarSkin);
		temp.setStyle('cornerRadius', 1);
		temp.setStyle('closeButtonVisible', false);
		temp.addEventListener('change', __tabBar_change);
		temp.id = 'tabBar';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		tabBar = temp;
		mx.binding.BindingManager.executeBindings(this, 'tabBar', tabBar);
		return temp;
	}

	/**
	 * @private
	 **/
	public function __tabBar_change(event:spark.events.IndexChangeEvent):Void {
		onTabBarChange(event);
	}

	private function _VisualEditorView_ButtonBarButton1_i():spark.components.ButtonBarButton {
		var temp:spark.components.ButtonBarButton = new spark.components.ButtonBarButton();
		temp.right = 0;
		temp.buttonMode = true;
		temp.setStyle('skinClass', components.skins.StartStopButtonSkin);
		temp.addEventListener('click', ___VisualEditorView_ButtonBarButton1_click);
		temp.id = '_VisualEditorView_ButtonBarButton1';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_VisualEditorView_ButtonBarButton1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_VisualEditorView_ButtonBarButton1', _VisualEditorView_ButtonBarButton1);
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___VisualEditorView_ButtonBarButton1_click(event:flash.events.MouseEvent):Void {
		onStartPreviewClick(event);
	}

	//  binding mgmt
	private function _VisualEditorView_bindingsSetup():Array<Dynamic> {
		var result:Array<Dynamic> = [];

		result[0] = new mx.binding.Binding(this,
				function():Dynamic {
					return (VisualEditorType.FLEX);
				},
				null,
				'_VisualEditorView_SetProperty1.value');

		result[1] = new mx.binding.Binding(this,
				function():Dynamic {
					return (VisualEditorType.PRIME_FACES);
				},
				null,
				'_VisualEditorView_SetProperty2.value');

		result[2] = new mx.binding.Binding(this,
				function():Dynamic {
					return (VisualEditorType.PRIME_FACES);
				},
				null,
				'_VisualEditorView_SetProperty3.value');

		result[3] = new mx.binding.Binding(this,
				null,
				null,
				'tabBar.dataProvider', 'viewStack');

		result[4] = new mx.binding.Binding(this,
				function():Dynamic {
					return (resourceManager.getString('resources', 'VE_PREVIEW'));
				},
				null,
				'_VisualEditorView_SetProperty4.value');

		result[5] = new mx.binding.Binding(this,
				function():Dynamic {
					return (resourceManager.getString('resources', 'STARTING_PREVIEW'));
				},
				null,
				'_VisualEditorView_SetProperty5.value');

		return result;
	}

	/**
	 * @private
	 **/
	public static var watcherSetupUtil(never, set):IWatcherSetupUtil2;
	private static function set_watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):IWatcherSetupUtil2 {
		(VisualEditorView)._watcherSetupUtil = watcherSetupUtil;
		return watcherSetupUtil;
	}

	private static var _watcherSetupUtil:IWatcherSetupUtil2;

	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindings:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _watchers:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsByDestination:Dynamic = {};
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsBeginWithWord:Dynamic = {};

}