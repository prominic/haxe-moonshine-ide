/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    elements.skins
 *  Class:      SparkVScrollBarTrackSkin
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineSharedCore/src/elements/skins/SparkVScrollBarTrackSkin.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:25:49 MSK
 */

package elements.skins;

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.Mx_internal;
import mx.filters.*;
import mx.graphics.SolidColor;
import mx.states.State;
import mx.styles.*;
import spark.components.supportClasses.Skin;
import spark.filters.DropShadowFilter;
import spark.primitives.Rect;

@:meta(HostComponent(name = 'spark.components.Button'))
@:meta(States(name = 'up', name = 'down', name = 'over', name = 'disabled'))
//  begin class def
class SparkVScrollBarTrackSkin extends spark.components.supportClasses.Skin implements mx.core.IStateClient2 {

	//  instance variables

	//  type-import dummies

	//  constructor (Flex display object)
	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		// layer initializers

		// properties
		this.mxmlContent = [_SparkVScrollBarTrackSkin_Rect1_c()];
		this.currentState = 'up';

		// events

		states = [
				new State({
					'name': 'up',
					'overrides': []
				}),
				new State({
					'name': 'down',
					'overrides': []
				}),
				new State({
					'name': 'over',
					'overrides': []
				}),
				new State({
					'name': 'disabled',
					'overrides': []
				})
		];

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings

		return factory;
	}

	//  initialize()
	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	//  scripts
	//  end scripts

	//  supporting function definitions for properties, events, styles, effects
	private function _SparkVScrollBarTrackSkin_Rect1_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.top = 0;
		temp.bottom = 0;
		temp.right = 0;
		temp.left = 0;
		temp.fill = _SparkVScrollBarTrackSkin_SolidColor1_c();
		temp.filters = [_SparkVScrollBarTrackSkin_DropShadowFilter1_c()];
		temp.initialized(this, null);
		return temp;
	}

	private function _SparkVScrollBarTrackSkin_SolidColor1_c():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		temp.color = 4473924;
		return temp;
	}

	private function _SparkVScrollBarTrackSkin_DropShadowFilter1_c():spark.filters.DropShadowFilter {
		var temp:spark.filters.DropShadowFilter = new spark.filters.DropShadowFilter();
		temp.distance = 2;
		temp.color = 0;
		temp.alpha = 0.2;
		temp.blurX = 8;
		temp.blurY = 8;
		temp.inner = true;
		return temp;
	}

}

//  end package def