/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    components.popup
 *  Class:      NewProjectFilePathPopup
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineSharedCore/src/components/popup/NewProjectFilePathPopup.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:25:47 MSK
 */

package components.popup;

import actionScripts.valueObjects.FileWrapper;
import mx.events.FlexEvent;
import actionScripts.events.NewFileEvent;
import actionScripts.locator.IDEModel;

import haxe.Constraints.Function;
import actionScripts.ui.renderers.FTETreeItemRenderer;
import actionScripts.ui.resizableTitleWindow.ResizableTitleWindow;
import actionScripts.utils.CustomTree;
import components.skins.ResizableTitleWindowSkin;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.Mx_internal;

import mx.filters.*;
import mx.styles.*;
import mx.validators.StringValidator;
import spark.components.Button;
import spark.components.HGroup;
import spark.components.Image;
import spark.components.Label;
import spark.components.RadioButtonGroup;
import spark.components.VGroup;

@:meta(Event(name = 'EVENT_NEW_FILE', type = 'actionScripts.events.NewFileEvent'))
//  begin class def
class NewProjectFilePathPopup extends actionScripts.ui.resizableTitleWindow.ResizableTitleWindow implements mx.binding.IBindingClient {

	//  instance variables
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var btnCreate:spark.components.Button;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var hgExistingWarning:spark.components.HGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var rgModifiersA:spark.components.RadioButtonGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var sValidator:mx.validators.StringValidator;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var tree:actionScripts.utils.CustomTree;

	//  type-import dummies

	//  constructor (Flex display object)
	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		var bindings:Array<Dynamic> = _NewProjectFilePathPopup_bindingsSetup();
		var watchers:Array<Dynamic> = [];

		var target:Dynamic = this;

		if (_watcherSetupUtil == null) {
			var watcherSetupUtilClass:Dynamic = Type.resolveClass('_components_popup_NewProjectFilePathPopupWatcherSetupUtil');
			Reflect.field(watcherSetupUtilClass, 'init')(null);
		}

		_watcherSetupUtil.setup(this,
				function(propertyName:String):Dynamic {
					return Reflect.field(target, propertyName);
				},
				function(propertyName:String):Dynamic {
					return Reflect.getProperty(NewProjectFilePathPopup, propertyName);
				},
				bindings,
				watchers
		);

		// mx_internal::_bindings =  //  mx_internal::_bindings.concat(bindings);
		// mx_internal::_watchers =  //  mx_internal::_watchers.concat(watchers);

		// layer initializers

		// properties
		this.width = 500;
		this.minWidth = 400;
		this.height = 300;
		this.minHeight = 300;
		this.controlBarContent = [_NewProjectFilePathPopup_Button1_i()];
		this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_NewProjectFilePathPopup_Array2_c);
		_NewProjectFilePathPopup_RadioButtonGroup1_i();
		_NewProjectFilePathPopup_StringValidator1_i();

		// events
		this.addEventListener('creationComplete', ___NewProjectFilePathPopup_ResizableTitleWindow1_creationComplete);

		for (i in 0...bindings.length) {
			AS3.as(bindings[i], Binding).execute();
		}

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings
		//  initialize component styles
		if (!AS3.as(this.styleDeclaration, Bool)) {
			this.styleDeclaration = new CSSStyleDeclaration(null, styleManager);
		}

		this.styleDeclaration.defaultFactory = function():Void {
					this.backgroundColor = 16119285;
					this.skinClass = components.skins.ResizableTitleWindowSkin;
				};
		return factory;
	}

	//  initialize()
	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	//  scripts
	//  <Script>, line 35 - 88

	public var folderWrapper:FileWrapper;

	@:meta(Bindable())
	private var model:IDEModel = IDEModel.getInstance();

	private function onProjectCreateButton(event:MouseEvent):Void {
		selectMainProjectFile();
	}

	private function onFileSelectedDoubleClick(event:MouseEvent):Void {
		selectMainProjectFile();
	}

	private function onNewProjectFilePathCreationComplete(event:FlexEvent):Void {
		title = 'Main application file';
		// probable termination
		if (folderWrapper == null) {
			hgExistingWarning.visible = true;
			return;
		}

		tree.dataProvider = folderWrapper;

		if (folderWrapper.children == null || folderWrapper.children.length == 0) {
			hgExistingWarning.visible = true;
		}
	}

	private function getIconForFile(object:Dynamic):Class<Dynamic> {
		return null;
	}

	private function selectMainProjectFile():Void {
		var tmpEvent:NewFileEvent = new NewFileEvent(NewFileEvent.EVENT_FILE_SELECTED, Std.string(tree.selectedItem.nativePath));
		dispatchEvent(tmpEvent);

		super.closeThis();
	}

	//  end scripts

	//  supporting function definitions for properties, events, styles, effects
	private function _NewProjectFilePathPopup_RadioButtonGroup1_i():spark.components.RadioButtonGroup {
		var temp:spark.components.RadioButtonGroup = new spark.components.RadioButtonGroup();
		temp.initialized(this, 'rgModifiersA');
		rgModifiersA = temp;
		mx.binding.BindingManager.executeBindings(this, 'rgModifiersA', rgModifiersA);
		return temp;
	}

	private function _NewProjectFilePathPopup_StringValidator1_i():mx.validators.StringValidator {
		var temp:mx.validators.StringValidator = new mx.validators.StringValidator();
		temp.property = 'text';
		temp.initialized(this, 'sValidator');
		sValidator = temp;
		mx.binding.BindingManager.executeBindings(this, 'sValidator', sValidator);
		return temp;
	}

	private function _NewProjectFilePathPopup_Button1_i():spark.components.Button {
		var temp:spark.components.Button = new spark.components.Button();
		temp.label = 'Select';
		temp.styleName = 'darkButton';
		temp.addEventListener('click', __btnCreate_click);
		temp.id = 'btnCreate';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		btnCreate = temp;
		mx.binding.BindingManager.executeBindings(this, 'btnCreate', btnCreate);
		return temp;
	}

	/**
	 * @private
	 **/
	public function __btnCreate_click(event:flash.events.MouseEvent):Void {
		onProjectCreateButton(event);
	}

	private function _NewProjectFilePathPopup_Array2_c():Array<Dynamic> {
		var temp:Array<VGroup> = [_NewProjectFilePathPopup_VGroup1_c()];
		return cast temp;
	}

	private function _NewProjectFilePathPopup_VGroup1_c():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentHeight = 100.0;
		temp.percentWidth = 100.0;
		temp.gap = 10;
		temp.paddingLeft = 12;
		temp.paddingBottom = 3;
		temp.paddingTop = 9;
		temp.paddingRight = 13;
		temp.horizontalAlign = 'center';
		temp.mxmlContent = [_NewProjectFilePathPopup_CustomTree1_i(), _NewProjectFilePathPopup_HGroup1_i()];
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _NewProjectFilePathPopup_CustomTree1_i():actionScripts.utils.CustomTree {
		var temp:actionScripts.utils.CustomTree = new actionScripts.utils.CustomTree();
		temp.percentWidth = 100.0;
		temp.percentHeight = 100.0;
		temp.rowHeight = 18;
		temp.labelField = 'name';
		temp.itemRenderer = _NewProjectFilePathPopup_ClassFactory1_c();
		temp.doubleClickEnabled = true;
		temp.setStyle('color', 15658734);
		temp.setStyle('contentBackgroundColor', 0);
		temp.setStyle('rollOverColor', 3750201);
		temp.setStyle('selectionColor', 12674488);
		temp.setStyle('alternatingItemColors', [4473924, 5065804]);
		temp.setStyle('verticalScrollBarStyleName', 'black');
		temp.setStyle('borderVisible', false);
		temp.setStyle('useRollOver', true);
		temp.addEventListener('doubleClick', __tree_doubleClick);
		temp.id = 'tree';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		tree = temp;
		mx.binding.BindingManager.executeBindings(this, 'tree', tree);
		return temp;
	}

	private function _NewProjectFilePathPopup_ClassFactory1_c():mx.core.ClassFactory {
		var temp:mx.core.ClassFactory = new mx.core.ClassFactory();
		temp.generator = actionScripts.ui.renderers.FTETreeItemRenderer;
		return temp;
	}

	/**
	 * @private
	 **/
	public function __tree_doubleClick(event:flash.events.MouseEvent):Void {
		onFileSelectedDoubleClick(event);
	}

	private function _NewProjectFilePathPopup_HGroup1_i():spark.components.HGroup {
		var temp:spark.components.HGroup = new spark.components.HGroup();
		temp.percentWidth = 100.0;
		temp.verticalAlign = 'middle';
		temp.visible = false;
		temp.mxmlContent = [_NewProjectFilePathPopup_Image1_c(), _NewProjectFilePathPopup_Label1_c()];
		temp.id = 'hgExistingWarning';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		hgExistingWarning = temp;
		mx.binding.BindingManager.executeBindings(this, 'hgExistingWarning', hgExistingWarning);
		return temp;
	}

	private function _NewProjectFilePathPopup_Image1_c():spark.components.Image {
		var temp:spark.components.Image = new spark.components.Image();
		temp.source = _embed_mxml__elements_images_iconExclamationRed_png_1685577265;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _NewProjectFilePathPopup_Label1_c():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.text = 'Source file should be immediate children of main source folder';
		temp.percentWidth = 100.0;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___NewProjectFilePathPopup_ResizableTitleWindow1_creationComplete(event:mx.events.FlexEvent):Void {
		onNewProjectFilePathCreationComplete(event);
	}

	//  binding mgmt
	private function _NewProjectFilePathPopup_bindingsSetup():Array<Dynamic> {
		var result:Array<Dynamic> = [];

		result[0] = new mx.binding.Binding(this,
				function():Bool {
					return (tree.selectedIndex != -1);
				},
				null,
				'btnCreate.enabled');

		result[1] = new mx.binding.Binding(this,
				function():Function {
					return (getIconForFile);
				},
				null,
				'tree.iconFunction');

		return result;
	}

	/**
	 * @private
	 **/
	public static var watcherSetupUtil(never, set):IWatcherSetupUtil2;
	private static function set_watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):IWatcherSetupUtil2 {
		(NewProjectFilePathPopup)._watcherSetupUtil = watcherSetupUtil;
		return watcherSetupUtil;
	}

	private static var _watcherSetupUtil:IWatcherSetupUtil2;

	//  embed carrier vars
	@:meta(Embed(source = '/elements/images/iconExclamationRed.png'))
	private var _embed_mxml__elements_images_iconExclamationRed_png_1685577265:Class<Dynamic>;

	//  end embed carrier vars

	//  binding management vars
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindings:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _watchers:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsByDestination:Dynamic = {};
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsBeginWithWord:Dynamic = {};

}

//  end package def