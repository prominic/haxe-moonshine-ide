/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    components.popup
 *  Class:      SDKUnzipConfirmPopup
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineSharedCore/src/components/popup/SDKUnzipConfirmPopup.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:25:49 MSK
 */

package components.popup;

import mx.controls.Alert;
import mx.core.UIComponent;
import mx.events.FlexEvent;
import spark.utils.TextFlowUtil;
import actionScripts.events.GlobalEventDispatcher;
import actionScripts.events.SettingsEvent;
import actionScripts.locator.IDEModel;
import actionScripts.plugin.help.HelpPlugin;
import actionScripts.utils.SDKUtils;
import actionScripts.valueObjects.ConstantsCoreVO;

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.DropShadowFilter;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import flashx.textLayout.elements.BreakElement;
import flashx.textLayout.elements.LinkElement;
import flashx.textLayout.elements.ParagraphElement;
import flashx.textLayout.elements.SpanElement;
import flashx.textLayout.elements.TextFlow;
import flashx.textLayout.events.FlowElementMouseEvent;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.HBox;
import mx.controls.HRule;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.Mx_internal;

import mx.filters.*;
import mx.graphics.SolidColor;
import mx.states.AddItems;
import mx.states.State;
import mx.styles.*;
import spark.components.BorderContainer;
import spark.components.Button;
import spark.components.CheckBox;
import spark.components.Group;
import spark.components.HGroup;
import spark.components.Image;
import spark.components.Label;
import spark.components.RichEditableText;
import spark.components.VGroup;

@:meta(States(name = 'permissionRequestOSX', name = 'default', name = 'detect', name = 'detectionFail', name = 'detectionSuccess', name = 'requiresSDKNotification'))
//  begin class def
class SDKUnzipConfirmPopup extends spark.components.BorderContainer implements mx.binding.IBindingClient implements mx.core.IStateClient2 {

	//  instance variables
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Button1:spark.components.Button;

	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Button2:spark.components.Button;

	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Button3:spark.components.Button;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Group1:spark.components.Group;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_HGroup1:spark.components.HGroup;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Image1:spark.components.Image;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Image2:spark.components.Image;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Image3:spark.components.Image;

	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Label1:spark.components.Label;

	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Label2:spark.components.Label;

	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_Label3:spark.components.Label;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_VGroup2:spark.components.VGroup;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_VGroup3:spark.components.VGroup;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_VGroup4:spark.components.VGroup;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_VGroup5:spark.components.VGroup;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_VGroup6:spark.components.VGroup;

	@:meta(Inspectable())
	/**
	 * @private
	 **/
	public var _SDKUnzipConfirmPopup_VGroup7:spark.components.VGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var buttonBar:mx.containers.HBox;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var buttonBarLine:mx.controls.HRule;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var cbDNSA:spark.components.CheckBox;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var grpBody:spark.components.VGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var lblBusy:spark.components.Label;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var retForceSDKNotif:spark.components.RichEditableText;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var retSuccess:spark.components.RichEditableText;

	//  type-import dummies

	//  constructor (Flex display object)
	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		var bindings:Array<Dynamic> = _SDKUnzipConfirmPopup_bindingsSetup();
		var watchers:Array<Dynamic> = [];

		var target:Dynamic = this;

		if (_watcherSetupUtil == null) {
			var watcherSetupUtilClass:Dynamic = Type.resolveClass('_components_popup_SDKUnzipConfirmPopupWatcherSetupUtil');
			Reflect.field(watcherSetupUtilClass, 'init')(null);
		}

		_watcherSetupUtil.setup(this,
				function(propertyName:String):Dynamic {
					return Reflect.field(target, propertyName);
				},
				function(propertyName:String):Dynamic {
					return Reflect.getProperty(SDKUnzipConfirmPopup, propertyName);
				},
				bindings,
				watchers
		);

		// mx_internal::_bindings =  //  mx_internal::_bindings.concat(bindings);
		// mx_internal::_watchers =  //  mx_internal::_watchers.concat(watchers);

		// layer initializers

		// properties
		this.width = 450;
		this.height = 200;
		this.backgroundFill = _SDKUnzipConfirmPopup_SolidColor1_c();
		this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_Array2_c);
		this.currentState = 'permissionRequestOSX';

		// events
		this.addEventListener('creationComplete', ___SDKUnzipConfirmPopup_BorderContainer1_creationComplete);
		this.addEventListener('initialize', ___SDKUnzipConfirmPopup_BorderContainer1_initialize);

		var _SDKUnzipConfirmPopup_HBox2_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_HBox2_c);
		var _SDKUnzipConfirmPopup_HBox3_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_HBox3_c);
		var _SDKUnzipConfirmPopup_HBox4_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_HBox4_c);
		var _SDKUnzipConfirmPopup_HBox5_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_HBox5_c);
		var _SDKUnzipConfirmPopup_HBox6_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_HBox6_c);
		var _SDKUnzipConfirmPopup_HBox7_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_HBox7_c);
		var _SDKUnzipConfirmPopup_Image1_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_Image1_i);
		var _SDKUnzipConfirmPopup_Image2_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_Image2_i);
		var _SDKUnzipConfirmPopup_Image3_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_Image3_i);
		var _SDKUnzipConfirmPopup_VGroup2_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_VGroup2_i);
		var _SDKUnzipConfirmPopup_VGroup3_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_VGroup3_i);
		var _SDKUnzipConfirmPopup_VGroup4_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_VGroup4_i);
		var _SDKUnzipConfirmPopup_VGroup5_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_VGroup5_i);
		var _SDKUnzipConfirmPopup_VGroup6_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_VGroup6_i);
		var _SDKUnzipConfirmPopup_VGroup7_factory:DeferredInstanceFromFunction =
		new mx.core.DeferredInstanceFromFunction(_SDKUnzipConfirmPopup_VGroup7_i);

		states = [
				new State({
					'name': 'permissionRequestOSX',
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_HBox3_factory,
								'destination': 'buttonBar',
								'position': 'first'
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_VGroup3_factory,
								'destination': '_SDKUnzipConfirmPopup_HGroup1',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['_SDKUnzipConfirmPopup_Group1']
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_Image3_factory,
								'destination': '_SDKUnzipConfirmPopup_Group1',
								'propertyName': 'mxmlContent',
								'position': 'first'
							})
			]
				}),
				new State({
					'name': 'default',
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_HBox2_factory,
								'destination': 'buttonBar',
								'position': 'first'
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_VGroup2_factory,
								'destination': '_SDKUnzipConfirmPopup_HGroup1',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['_SDKUnzipConfirmPopup_Group1']
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_Image1_factory,
								'destination': '_SDKUnzipConfirmPopup_Group1',
								'propertyName': 'mxmlContent',
								'position': 'first'
							})
			]
				}),
				new State({
					'name': 'detect',
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_HBox4_factory,
								'destination': 'buttonBar',
								'position': 'first'
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_VGroup4_factory,
								'destination': '_SDKUnzipConfirmPopup_HGroup1',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['_SDKUnzipConfirmPopup_Group1']
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_Image1_factory,
								'destination': '_SDKUnzipConfirmPopup_Group1',
								'propertyName': 'mxmlContent',
								'position': 'first'
							})
			]
				}),
				new State({
					'name': 'detectionFail',
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_HBox5_factory,
								'destination': 'buttonBar',
								'position': 'first'
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_VGroup5_factory,
								'destination': '_SDKUnzipConfirmPopup_HGroup1',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['_SDKUnzipConfirmPopup_Group1']
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_Image1_factory,
								'destination': '_SDKUnzipConfirmPopup_Group1',
								'propertyName': 'mxmlContent',
								'position': 'first'
							})
			]
				}),
				new State({
					'name': 'detectionSuccess',
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_HBox6_factory,
								'destination': 'buttonBar',
								'position': 'first'
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_VGroup6_factory,
								'destination': '_SDKUnzipConfirmPopup_HGroup1',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['_SDKUnzipConfirmPopup_Group1']
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_Image1_factory,
								'destination': '_SDKUnzipConfirmPopup_Group1',
								'propertyName': 'mxmlContent',
								'position': 'first'
							})
			]
				}),
				new State({
					'name': 'requiresSDKNotification',
					'overrides': [
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_HBox7_factory,
								'destination': 'buttonBar',
								'position': 'first'
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_VGroup7_factory,
								'destination': '_SDKUnzipConfirmPopup_HGroup1',
								'propertyName': 'mxmlContent',
								'position': 'after',
								'relativeTo': ['_SDKUnzipConfirmPopup_Group1']
							}),
					new AddItems().initializeFromObject({
								'itemsFactory': _SDKUnzipConfirmPopup_Image2_factory,
								'destination': '_SDKUnzipConfirmPopup_Group1',
								'propertyName': 'mxmlContent',
								'position': 'first'
							})
			]
				})
		];

		for (i in 0...bindings.length) {
			AS3.as(bindings[i], Binding).execute();
		}

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings
		//  initialize component styles
		if (!AS3.as(this.styleDeclaration, Bool)) {
			this.styleDeclaration = new CSSStyleDeclaration(null, styleManager);
		}

		this.styleDeclaration.defaultFactory = function():Void {
					this.cornerRadius = 6;
					this.borderColor = 2960685;
				};
		return factory;
	}

	//  initialize()
	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	//  scripts
	//  <Script>, line 29 - 247

	@:meta(Bindable())
	public var showAsHelperDownloader:Bool = false;

	public var showAsRequiresSDKNotification:Bool = false;
	public var isSDKSetupSectionOpened:Bool = false;

	@:meta(Bindable())
	private var userNotes:String;

	private var unzipperNotes:String = 'This is the ' + ConstantsCoreVO.MOONSHINE_IDE_LABEL + ' Complete (App Store) release. The IDE requires the Apache Flex® SDK to be un-zipped to enable you to later compile the source code you write in the IDE. This is a one-time operation. Please click Confirm to proceed.';
	private var helperDownloaderNotes:String = 'In order to compile your project, ' + ConstantsCoreVO.MOONSHINE_IDE_LABEL + ' needs the Apache Flex® or FlexJS® SDKs, as well as Apache Ant.\n\nDue to Apple sandbox, your SDK location needs to be in your \'Downloads\' folder. Use Moonshine App Store Helper to automatically install the required versions.';
	private var model:IDEModel = IDEModel.getInstance();

	private function addCloseButton():Void {
		if (AS3.as(ConstantsCoreVO.IS_OSX_CODECOMPLETION_PROMPT, Bool)) {
			onPermittedOSX();
		}

		var closeButtonUIC:UIComponent = new UIComponent();
		closeButtonUIC.width = closeButtonUIC.height = 27;
		closeButtonUIC.right = 0;

		var closeButton:Sprite = new Sprite();
		// Circle
		closeButton.graphics.lineStyle(1, 0xFFFFFF, 0.8);
		closeButton.graphics.beginFill(0x0, 0);
		closeButton.graphics.drawCircle(14, 12, 6);
		closeButton.graphics.endFill();
		// X (\)
		closeButton.graphics.lineStyle(2, 0xFFFFFF, 0.8, true);
		closeButton.graphics.moveTo(12, 10);
		closeButton.graphics.lineTo(16, 14);
		// X (/)
		closeButton.graphics.moveTo(16, 10);
		closeButton.graphics.lineTo(12, 14);
		// Hit area
		closeButton.graphics.lineStyle(0, 0x0, 0);
		closeButton.graphics.beginFill(0x0, 0);
		closeButton.graphics.drawRect(0, 0, 27, 25);
		closeButton.graphics.endFill();

		closeButton.addEventListener(MouseEvent.CLICK, closeButtonClicked, false, 0, true);
		closeButtonUIC.addChild(closeButton);

		addElement(closeButtonUIC);
	}

	private function onPermittedOSX():Void {
		ConstantsCoreVO.IS_OSX_CODECOMPLETION_PROMPT = true;
		if (AS3.as(ConstantsCoreVO.IS_MACOS, Bool)) {
			this.y = y - 10;
			this.height = height + 20;
			showAsHelperDownloader = true;
			currentState = 'default';
			prepareNotifications();

			/*if (showAsRequiresSDKNotification)
			{
			    onInitialized(null);
			}
			else
			{
			    currentState = "default";
			    prepareNotifications();
			}*/
		} else {
			//dispatchEvent(new Event(HelpPlugin.EVENT_APACHE_SDK_DOWNLOADER_REQUEST));
			GlobalEventDispatcher.getInstance().dispatchEvent(new SettingsEvent(SettingsEvent.EVENT_OPEN_SETTINGS, 'actionScripts.plugins.as3project.mxmlc::MXMLCPlugin'));
			isSDKSetupSectionOpened = true;
			removeListeners();
			dispatchEvent(new Event(Event.CLOSE));
		}
	}

	private function prepareNotifications():Void {
		userNotes = (showAsHelperDownloader) ? helperDownloaderNotes : unzipperNotes;
		if (cbDNSA != null) {
			cbDNSA.selected = (showAsHelperDownloader) ? ConstantsCoreVO.IS_SDK_HELPER_PROMPT_DNS : ConstantsCoreVO.IS_BUNDLED_SDK_PROMPT_DNS;
		}
	}

	private function closeButtonClicked(event:MouseEvent):Void {
		if (event != null) {
			event.target.removeEventListener(MouseEvent.CLICK, closeButtonClicked);
		}
		removeListeners();
		dispatchEvent(new Event(Event.CLOSE));
	}

	private function onConfirmSDKExtraction(event:MouseEvent):Void {
		grpBody.alpha = .5;
		lblBusy.visible = true;
		as3hx.Compat.setTimeout(function():Void {
					GlobalEventDispatcher.getInstance().addEventListener(SDKUtils.EVENT_SDK_EXTRACTED, onSDKsExtracted);
					GlobalEventDispatcher.getInstance().addEventListener(SDKUtils.EVENT_SDK_EXTRACTION_FAILED, onSDKsExtractionFailed);
					SDKUtils.extractBundledSDKs(null);
				}, 300);
	}

	private function onConfirmHelperDownload(event:MouseEvent):Void {
		flash.Lib.getURL(new URLRequest('https://moonshine-ide.com/moonshine-app-store-helper/'), '_blank');
		currentState = 'detect';
	}

	private function detectDownloadedSDKPresence(event:MouseEvent):Void {
		SDKUtils.checkHelperDownloadedSDKPresence();
		if (AS3.as(ConstantsCoreVO.IS_HELPER_DOWNLOADED_SDK_PRESENT, Bool)) {
			var totalBundledSDKs:Array<Dynamic> = SDKUtils.initBundledSDKs();
			if (totalBundledSDKs.length != 0) {
				currentState = 'detectionSuccess';

				var markup:String = '<p>Following SDK(s) have been detected and configured automatically:<br/></p>';
				for (sdkDescription in totalBundledSDKs) {
					markup += '<p>- ' + Std.string(Reflect.field(sdkDescription, 'name')) + '</p>';
				}
				if (AS3.as(ConstantsCoreVO.IS_HELPER_DOWNLOADED_ANT_PRESENT, Bool)) {
					markup += '<p>- Ant SDK, ' + ConstantsCoreVO.IS_HELPER_DOWNLOADED_ANT_PRESENT.name + '</p>';
				}
				var flow:TextFlow = TextFlowUtil.importFromString(markup);
				retSuccess.textFlow = flow;
			} else {
				currentState = 'detectionFail';
			}
		} else {
			currentState = 'detectionFail';
		}
	}

	private function onSDKsExtracted(event:Event):Void {
		removeListeners();
		grpBody.alpha = 1;
		lblBusy.visible = false;

		SDKUtils.initBundledSDKs();
		Alert.show('Flex SDKs extracted. You can now use them from MXMLC Compiler Plugin, in Moonshine Settings.', 'Note!');
		closeButtonClicked(null);
	}

	private function onSDKsExtractionFailed(event:Event):Void {
		grpBody.alpha = 1;
		lblBusy.visible = false;

		Alert.show('Oops! Something is wrong. SDKs extraction failed!', 'I/O Error!');
	}

	private function onDNS(event:Event):Void {
		if (showAsHelperDownloader) {
			ConstantsCoreVO.IS_SDK_HELPER_PROMPT_DNS = cbDNSA.selected;
		} else {
			ConstantsCoreVO.IS_BUNDLED_SDK_PROMPT_DNS = cbDNSA.selected;
		}

		GlobalEventDispatcher.getInstance().dispatchEvent(new Event(SDKUtils.EVENT_SDK_PROMPT_DNS));
	}

	private function removeListeners():Void {
		GlobalEventDispatcher.getInstance().removeEventListener(SDKUtils.EVENT_SDK_EXTRACTED, onSDKsExtracted);
		GlobalEventDispatcher.getInstance().removeEventListener(SDKUtils.EVENT_SDK_EXTRACTION_FAILED, onSDKsExtractionFailed);
	}

	/**
	 * On download SDK request
	 */
	private function onSDKDownlaodRequest(event:MouseEvent):Void {
		if (AS3.as(ConstantsCoreVO.IS_MACOS, Bool)) {
			showAsHelperDownloader = true;
			currentState = 'default';
			prepareNotifications();
		} else {
			dispatchEvent(new Event(HelpPlugin.EVENT_APACHE_SDK_DOWNLOADER_REQUEST));
			removeListeners();
			dispatchEvent(new Event(Event.CLOSE));
		}
	}

	private function onInitialized(event:FlexEvent):Void {
		if (showAsRequiresSDKNotification && !AS3.as(ConstantsCoreVO.IS_OSX_CODECOMPLETION_PROMPT, Bool)) {
			currentState = 'permissionRequestOSX';
		} else if (showAsHelperDownloader) {
			//currentState = "permissionRequestOSX";
			onPermittedOSX();
		} else if (showAsRequiresSDKNotification) {
			currentState = 'requiresSDKNotification';
			var markup:String = (AS3.as(ConstantsCoreVO.IS_MACOS, Bool)) ? '<p>Moonshine requires Apache FlexJS 0.7.0+ SDK to work properly. Due to Apple sandbox, your SDK location needs to be in your <span fontWeight="bold">Downloads</span> folder.<br/><br/>To automatically download and setup click on Download button.</p>' : '<p>Moonshine requires Apache FlexJS 0.7.0 SDK to work properly.<br/><br/>To automatically download and setup click on Download button.</p>';
			var flow:TextFlow = TextFlowUtil.importFromString(markup);
			callLater(function():Void {
						retForceSDKNotif.textFlow = flow;
					});
		}
	}

	//  end scripts

	//  supporting function definitions for properties, events, styles, effects
	private function _SDKUnzipConfirmPopup_SolidColor1_c():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		temp.color = 10526880;
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Array2_c():Array<Dynamic> {
		var temp:Array<Dynamic> = [_SDKUnzipConfirmPopup_VGroup1_i(), _SDKUnzipConfirmPopup_Label5_i()];
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup1_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.percentHeight = 100.0;
		temp.gap = 0;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_HGroup1_i(), _SDKUnzipConfirmPopup_HRule1_i(), _SDKUnzipConfirmPopup_HBox1_i()];
		temp.id = 'grpBody';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		grpBody = temp;
		mx.binding.BindingManager.executeBindings(this, 'grpBody', grpBody);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_HGroup1_i():spark.components.HGroup {
		var temp:spark.components.HGroup = new spark.components.HGroup();
		temp.percentWidth = 100.0;
		temp.percentHeight = 100.0;
		temp.verticalAlign = 'middle';
		temp.gap = 0;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_Group1_i()];
		temp.id = '_SDKUnzipConfirmPopup_HGroup1';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_HGroup1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_HGroup1', _SDKUnzipConfirmPopup_HGroup1);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Group1_i():spark.components.Group {
		var temp:spark.components.Group = new spark.components.Group();
		temp.width = 98;
		temp.mxmlContent = [];
		temp.id = '_SDKUnzipConfirmPopup_Group1';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Group1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Group1', _SDKUnzipConfirmPopup_Group1);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Image1_i():spark.components.Image {
		var temp:spark.components.Image = new spark.components.Image();
		temp.source = _embed_mxml__elements_images_icoSDKExtract_png_1344295471;
		temp.horizontalCenter = 0;
		temp.verticalCenter = 0;
		temp.id = '_SDKUnzipConfirmPopup_Image1';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Image1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Image1', _SDKUnzipConfirmPopup_Image1);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Image2_i():spark.components.Image {
		var temp:spark.components.Image = new spark.components.Image();
		temp.source = _embed_mxml__elements_images_icoSDKExclamation_png_2039436345;
		temp.horizontalCenter = 0;
		temp.verticalCenter = 0;
		temp.id = '_SDKUnzipConfirmPopup_Image2';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Image2 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Image2', _SDKUnzipConfirmPopup_Image2);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Image3_i():spark.components.Image {
		var temp:spark.components.Image = new spark.components.Image();
		temp.source = _embed_mxml__elements_images_icoApache_png_1048664625;
		temp.horizontalCenter = 0;
		temp.verticalCenter = 0;
		temp.id = '_SDKUnzipConfirmPopup_Image3';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Image3 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Image3', _SDKUnzipConfirmPopup_Image3);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup2_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.autoLayout = true;
		temp.paddingRight = 20;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_Label1_i(), _SDKUnzipConfirmPopup_CheckBox1_i(), _SDKUnzipConfirmPopup_Label2_i()];
		temp.id = '_SDKUnzipConfirmPopup_VGroup2';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_VGroup2 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_VGroup2', _SDKUnzipConfirmPopup_VGroup2);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Label1_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.maxDisplayedLines = 0;
		temp.percentWidth = 100.0;
		temp.setStyle('fontSize', 13);
		temp.id = '_SDKUnzipConfirmPopup_Label1';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Label1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Label1', _SDKUnzipConfirmPopup_Label1);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_CheckBox1_i():spark.components.CheckBox {
		var temp:spark.components.CheckBox = new spark.components.CheckBox();
		temp.label = 'Do not show again';
		temp.addEventListener('change', __cbDNSA_change);
		temp.id = 'cbDNSA';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		cbDNSA = temp;
		mx.binding.BindingManager.executeBindings(this, 'cbDNSA', cbDNSA);
		return temp;
	}

	/**
	 * @private
	 **/
	public function __cbDNSA_change(event:flash.events.Event):Void {
		onDNS(event);
	}

	private function _SDKUnzipConfirmPopup_Label2_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.text = '(To show again select Extract Bundled SDK in File menu)';
		temp.setStyle('fontSize', 12);
		temp.setStyle('color', 6710886);
		temp.id = '_SDKUnzipConfirmPopup_Label2';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Label2 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Label2', _SDKUnzipConfirmPopup_Label2);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup3_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.autoLayout = true;
		temp.paddingRight = 20;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_Label3_i()];
		temp.id = '_SDKUnzipConfirmPopup_VGroup3';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_VGroup3 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_VGroup3', _SDKUnzipConfirmPopup_VGroup3);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Label3_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.maxDisplayedLines = 5;
		temp.percentWidth = 100.0;
		temp.setStyle('fontSize', 13);
		temp.id = '_SDKUnzipConfirmPopup_Label3';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_Label3 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_Label3', _SDKUnzipConfirmPopup_Label3);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup4_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.autoLayout = true;
		temp.paddingRight = 20;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_RichEditableText1_c()];
		temp.id = '_SDKUnzipConfirmPopup_VGroup4';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_VGroup4 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_VGroup4', _SDKUnzipConfirmPopup_VGroup4);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_RichEditableText1_c():spark.components.RichEditableText {
		var temp:spark.components.RichEditableText = new spark.components.RichEditableText();
		temp.editable = false;
		temp.focusEnabled = false;
		temp.percentWidth = 100.0;
		temp.textFlow = _SDKUnzipConfirmPopup_TextFlow1_c();
		temp.setStyle('fontSize', 13);
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _SDKUnzipConfirmPopup_TextFlow1_c():flashx.textLayout.elements.TextFlow {
		var temp:flashx.textLayout.elements.TextFlow = new flashx.textLayout.elements.TextFlow();
		temp.mxmlChildren = ['\n\t\t\t\t\t\t\t', _SDKUnzipConfirmPopup_ParagraphElement1_c(), '\n\t\t\t\t\t\t'];
		temp.initialized(this, null);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_ParagraphElement1_c():flashx.textLayout.elements.ParagraphElement {
		var temp:flashx.textLayout.elements.ParagraphElement = new flashx.textLayout.elements.ParagraphElement();
		temp.mxmlChildren = ['The download page should have been opened in your browser. If you didn\'t see it, ', _SDKUnzipConfirmPopup_LinkElement1_c(), '.', _SDKUnzipConfirmPopup_BreakElement1_c(), _SDKUnzipConfirmPopup_BreakElement2_c(), 'Install the application and follow the instructions to install the required SDKs. When the installation is complete, click the ', _SDKUnzipConfirmPopup_SpanElement1_c(), ' button to configure the installed SDKs.'];
		temp.initialized(this, null);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_LinkElement1_c():flashx.textLayout.elements.LinkElement {
		var temp:flashx.textLayout.elements.LinkElement = new flashx.textLayout.elements.LinkElement();
		temp.mxmlChildren = ['Click here'];
		temp.addEventListener('click', ___SDKUnzipConfirmPopup_LinkElement1_click);
		temp.initialized(this, null);
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_LinkElement1_click(event:flashx.textLayout.events.FlowElementMouseEvent):Void {
		onConfirmHelperDownload(null);
	}

	private function _SDKUnzipConfirmPopup_BreakElement1_c():flashx.textLayout.elements.BreakElement {
		var temp:flashx.textLayout.elements.BreakElement = new flashx.textLayout.elements.BreakElement();
		temp.initialized(this, null);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_BreakElement2_c():flashx.textLayout.elements.BreakElement {
		var temp:flashx.textLayout.elements.BreakElement = new flashx.textLayout.elements.BreakElement();
		temp.initialized(this, null);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_SpanElement1_c():flashx.textLayout.elements.SpanElement {
		var temp:flashx.textLayout.elements.SpanElement = new flashx.textLayout.elements.SpanElement();
		temp.fontWeight = 'bold';
		temp.mxmlChildren = ['Validate & Set'];
		temp.initialized(this, null);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup5_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.autoLayout = true;
		temp.paddingRight = 20;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_Label4_c()];
		temp.id = '_SDKUnzipConfirmPopup_VGroup5';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_VGroup5 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_VGroup5', _SDKUnzipConfirmPopup_VGroup5);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_Label4_c():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.text = 'Moonshine could not find the installed SDKs.';
		temp.maxDisplayedLines = 5;
		temp.percentWidth = 100.0;
		temp.setStyle('fontSize', 13);
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup6_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.autoLayout = true;
		temp.paddingRight = 20;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_RichEditableText2_i()];
		temp.id = '_SDKUnzipConfirmPopup_VGroup6';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_VGroup6 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_VGroup6', _SDKUnzipConfirmPopup_VGroup6);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_RichEditableText2_i():spark.components.RichEditableText {
		var temp:spark.components.RichEditableText = new spark.components.RichEditableText();
		temp.editable = false;
		temp.focusEnabled = false;
		temp.percentWidth = 100.0;
		temp.setStyle('fontSize', 13);
		temp.id = 'retSuccess';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		retSuccess = temp;
		mx.binding.BindingManager.executeBindings(this, 'retSuccess', retSuccess);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_VGroup7_i():spark.components.VGroup {
		var temp:spark.components.VGroup = new spark.components.VGroup();
		temp.percentWidth = 100.0;
		temp.autoLayout = true;
		temp.paddingRight = 20;
		temp.mxmlContent = [_SDKUnzipConfirmPopup_RichEditableText3_i()];
		temp.id = '_SDKUnzipConfirmPopup_VGroup7';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		_SDKUnzipConfirmPopup_VGroup7 = temp;
		mx.binding.BindingManager.executeBindings(this, '_SDKUnzipConfirmPopup_VGroup7', _SDKUnzipConfirmPopup_VGroup7);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_RichEditableText3_i():spark.components.RichEditableText {
		var temp:spark.components.RichEditableText = new spark.components.RichEditableText();
		temp.editable = false;
		temp.focusEnabled = false;
		temp.percentWidth = 100.0;
		temp.setStyle('fontSize', 13);
		temp.id = 'retForceSDKNotif';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		retForceSDKNotif = temp;
		mx.binding.BindingManager.executeBindings(this, 'retForceSDKNotif', retForceSDKNotif);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_HRule1_i():mx.controls.HRule {
		var temp:mx.controls.HRule = new mx.controls.HRule();
		temp.percentWidth = 100.0;
		temp.bottom = 41;
		temp.setStyle('strokeWidth', 1);
		temp.setStyle('strokeColor', 3158064);
		temp.id = 'buttonBarLine';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		buttonBarLine = temp;
		mx.binding.BindingManager.executeBindings(this, 'buttonBarLine', buttonBarLine);
		return temp;
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox1_i():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.percentWidth = 100.0;
		temp.height = 41;
		temp.bottom = 0;
		temp.filters = [_SDKUnzipConfirmPopup_DropShadowFilter1_c()];
		temp.setStyle('backgroundColor', 4473924);
		temp.setStyle('paddingRight', 10);
		temp.setStyle('paddingTop', 0);
		temp.setStyle('horizontalAlign', 'center');
		temp.setStyle('verticalAlign', 'middle');
		temp.id = 'buttonBar';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'id': 'buttonBar',
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': []
						};
					}
				});
		temp._documentDescriptor.document = this;
		buttonBar = temp;
		mx.binding.BindingManager.executeBindings(this, 'buttonBar', buttonBar);
		return temp;
	}

	private function _SDKUnzipConfirmPopup_DropShadowFilter1_c():flash.filters.DropShadowFilter {
		var temp:flash.filters.DropShadowFilter = new flash.filters.DropShadowFilter();
		temp.alpha = 0.5;
		temp.angle = 90;
		temp.blurX = 0;
		temp.blurY = 7;
		temp.strength = 1;
		temp.distance = 1;
		temp.inner = true;
		return temp;
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox2_c():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.autoLayout = true;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': [
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'id': '_SDKUnzipConfirmPopup_Button1',
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button1_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Confirm',
										'styleName': 'darkButton'
									};
								}
							}),
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'id': '_SDKUnzipConfirmPopup_Button2',
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button2_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Go To Download Page',
										'styleName': 'darkButton'
									};
								}
							}),
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'id': '_SDKUnzipConfirmPopup_Button3',
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button3_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Skip For Now',
										'styleName': 'darkButton'
									};
								}
							})
				]
						};
					}
				});
		temp._documentDescriptor.document = this;
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button1_click(event:flash.events.MouseEvent):Void {
		onConfirmSDKExtraction(event);
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button2_click(event:flash.events.MouseEvent):Void {
		onConfirmHelperDownload(event);
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button3_click(event:flash.events.MouseEvent):Void {
		closeButtonClicked(event);
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox3_c():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.autoLayout = true;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': [
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button4_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Configure & Enable',
										'styleName': 'darkButton'
									};
								}
							}),
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button5_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'No Thanks',
										'styleName': 'darkButton'
									};
								}
							})
				]
						};
					}
				});
		temp._documentDescriptor.document = this;
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button4_click(event:flash.events.MouseEvent):Void {
		onPermittedOSX();
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button5_click(event:flash.events.MouseEvent):Void {
		closeButtonClicked(event);
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox4_c():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.autoLayout = true;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': [
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button6_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Validate & Set',
										'styleName': 'darkButton'
									};
								}
							}),
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button7_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Skip For Now',
										'styleName': 'darkButton'
									};
								}
							})
				]
						};
					}
				});
		temp._documentDescriptor.document = this;
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button6_click(event:flash.events.MouseEvent):Void {
		detectDownloadedSDKPresence(event);
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button7_click(event:flash.events.MouseEvent):Void {
		closeButtonClicked(event);
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox5_c():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.autoLayout = true;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': [
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button8_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Try Again',
										'styleName': 'darkButton'
									};
								}
							}),
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button9_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Skip For Now',
										'styleName': 'darkButton'
									};
								}
							})
				]
						};
					}
				});
		temp._documentDescriptor.document = this;
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button8_click(event:flash.events.MouseEvent):Void {
		currentState = 'detect';
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button9_click(event:flash.events.MouseEvent):Void {
		closeButtonClicked(event);
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox6_c():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.autoLayout = true;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': [
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button10_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Start Using Moonshine!',
										'styleName': 'darkButton'
									};
								}
							})
				]
						};
					}
				});
		temp._documentDescriptor.document = this;
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button10_click(event:flash.events.MouseEvent):Void {
		closeButtonClicked(event);
	}

	@:access(mx.containers.HBox) private function _SDKUnzipConfirmPopup_HBox7_c():mx.containers.HBox {
		var temp:mx.containers.HBox = new mx.containers.HBox();
		temp.autoLayout = true;
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		temp._documentDescriptor =
				new mx.core.UIComponentDescriptor({
					'type': mx.containers.HBox,
					'propertiesFactory': function():Dynamic {
						return {
							'childDescriptors': [
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button11_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Download',
										'styleName': 'darkButton'
									};
								}
							}),
							new mx.core.UIComponentDescriptor({
								'type': spark.components.Button,
								'events': {
									'click': '___SDKUnzipConfirmPopup_Button12_click'
								},
								'propertiesFactory': function():Dynamic {
									return {
										'label': 'Skip For Now',
										'styleName': 'darkButton'
									};
								}
							})
				]
						};
					}
				});
		temp._documentDescriptor.document = this;
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button11_click(event:flash.events.MouseEvent):Void {
		onSDKDownlaodRequest(event);
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_Button12_click(event:flash.events.MouseEvent):Void {
		closeButtonClicked(event);
	}

	private function _SDKUnzipConfirmPopup_Label5_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.text = 'Working...';
		temp.horizontalCenter = 0;
		temp.verticalCenter = 0;
		temp.visible = false;
		temp.setStyle('fontSize', 14);
		temp.setStyle('fontWeight', 'bold');
		temp.setStyle('color', 16777215);
		temp.id = 'lblBusy';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		lblBusy = temp;
		mx.binding.BindingManager.executeBindings(this, 'lblBusy', lblBusy);
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_BorderContainer1_creationComplete(event:mx.events.FlexEvent):Void {
		addCloseButton();
	}

	/**
	 * @private
	 **/
	public function ___SDKUnzipConfirmPopup_BorderContainer1_initialize(event:mx.events.FlexEvent):Void {
		onInitialized(event);
	}

	//  binding mgmt
	private function _SDKUnzipConfirmPopup_bindingsSetup():Array<Dynamic> {
		var result:Array<Dynamic> = [];

		result[0] = new mx.binding.Binding(this,
				function():String {
					var result:Dynamic = (userNotes);
					return Std.string((result == null) ? null : Std.string(result));
				},
				null,
				'_SDKUnzipConfirmPopup_Label1.text');

		result[1] = new mx.binding.Binding(this,
				function():Bool {
					return (!showAsHelperDownloader);
				},
				null,
				'_SDKUnzipConfirmPopup_Label2.visible');

		result[2] = new mx.binding.Binding(this,
				function():Bool {
					return (!showAsHelperDownloader);
				},
				null,
				'_SDKUnzipConfirmPopup_Label2.includeInLayout');

		result[3] = new mx.binding.Binding(this,
				function():String {
					var result:Dynamic = ((AS3.as(ConstantsCoreVO.IS_MACOS, Bool)) ? 'Moonshine can optionally be configured to compile your Apache Flex® and FlexJS® projects. Would you like to enable this feature now?' : 'Moonshine can be configured to compile your Apache Flex® and FlexJS® projects. Would you like to setup or download Flex® or FlexJS® SDK to enable this feature?');
					return Std.string((result == null) ? null : Std.string(result));
				},
				null,
				'_SDKUnzipConfirmPopup_Label3.text');

		result[4] = new mx.binding.Binding(this,
				function():Bool {
					return (!showAsHelperDownloader);
				},
				null,
				'_SDKUnzipConfirmPopup_Button1.visible');

		result[5] = new mx.binding.Binding(this,
				function():Bool {
					return (!showAsHelperDownloader);
				},
				null,
				'_SDKUnzipConfirmPopup_Button1.includeInLayout');

		result[6] = new mx.binding.Binding(this,
				null,
				null,
				'_SDKUnzipConfirmPopup_Button2.visible', 'showAsHelperDownloader');

		result[7] = new mx.binding.Binding(this,
				null,
				null,
				'_SDKUnzipConfirmPopup_Button2.includeInLayout', 'showAsHelperDownloader');

		result[8] = new mx.binding.Binding(this,
				null,
				null,
				'_SDKUnzipConfirmPopup_Button3.visible', 'showAsHelperDownloader');

		result[9] = new mx.binding.Binding(this,
				null,
				null,
				'_SDKUnzipConfirmPopup_Button3.includeInLayout', 'showAsHelperDownloader');

		return result;
	}

	/**
	 * @private
	 **/
	public static var watcherSetupUtil(never, set):IWatcherSetupUtil2;
	private static function set_watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):IWatcherSetupUtil2 {
		(SDKUnzipConfirmPopup)._watcherSetupUtil = watcherSetupUtil;
		return watcherSetupUtil;
	}

	private static var _watcherSetupUtil:IWatcherSetupUtil2;

	//  embed carrier vars
	@:meta(Embed(source = '/elements/images/icoSDKExclamation.png'))
	private var _embed_mxml__elements_images_icoSDKExclamation_png_2039436345:Class<Dynamic>;

	@:meta(Embed(source = '/elements/images/icoSDKExtract.png'))
	private var _embed_mxml__elements_images_icoSDKExtract_png_1344295471:Class<Dynamic>;

	@:meta(Embed(source = '/elements/images/icoApache.png'))
	private var _embed_mxml__elements_images_icoApache_png_1048664625:Class<Dynamic>;

	//  end embed carrier vars

	//  binding management vars
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindings:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _watchers:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsByDestination:Dynamic = {};
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsBeginWithWord:Dynamic = {};

}

//  end package def