/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    components.views.other
 *  Class:      MoonshineStatusBar
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineSharedCore/src/components/views/other/MoonshineStatusBar.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:25:48 MSK
 */

package components.views.other;

import actionScripts.events.GlobalEventDispatcher;
import actionScripts.events.StatusBarEvent;

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.Mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.Group;
import spark.components.HGroup;
import spark.components.Image;
import spark.components.Label;
import spark.core.SpriteVisualElement;

//  begin class def
class MoonshineStatusBar extends spark.components.Group {

	//  instance variables
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var baseLoader:spark.core.SpriteVisualElement;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var btnStop:spark.components.Image;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var hgLanguageServer:spark.components.HGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var hgProjectBuild:spark.components.HGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var hgProjectDebug:spark.components.HGroup;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var languageServerLoader:spark.core.SpriteVisualElement;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var lblBuilding:spark.components.Label;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var lblDebugging:spark.components.Label;

	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var lblLanguageServer:spark.components.Label;

	//  type-import dummies

	//  constructor (Flex display object)
	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		// layer initializers

		// properties
		this.mxmlContent = [_MoonshineStatusBar_HGroup1_i(), _MoonshineStatusBar_HGroup2_i(), _MoonshineStatusBar_HGroup3_i()];

		// events
		this.addEventListener('creationComplete', ___MoonshineStatusBar_Group1_creationComplete);

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings

		return factory;
	}

	//  initialize()
	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	//  scripts
	//  <Script>, line 6 - 79

	private var dispatcher:GlobalEventDispatcher = GlobalEventDispatcher.getInstance();
	private var loaderBar:LoadingBar;
	private var languageServerLoaderBar:LoadingBar;

	private function onCreation():Void {
		dispatcher.addEventListener(StatusBarEvent.PROJECT_BUILD_STARTED, onProjectBuildStarted, false, 0, true);
		dispatcher.addEventListener(StatusBarEvent.PROJECT_BUILD_ENDED, onProjectBuildEnded, false, 0, true);
		dispatcher.addEventListener(StatusBarEvent.PROJECT_DEBUG_STARTED, onProjectDebugStarted, false, 0, true);
		dispatcher.addEventListener(StatusBarEvent.PROJECT_DEBUG_ENDED, onProjectDebugEnded, false, 0, true);
		dispatcher.addEventListener(StatusBarEvent.LANGUAGE_SERVER_STATUS, onLanguageServerStatus, false, 0, true);
	}

	private function onLanguageServerStatus(event:StatusBarEvent):Void {
		lblLanguageServer.text = event.notificationSuffix;
		hgLanguageServer.visible = lblLanguageServer.text != null && lblLanguageServer.text.length > 0;
		if (AS3.as(hgLanguageServer.visible, Bool) && languageServerLoaderBar == null) {
			languageServerLoaderBar = new LoadingBar();
			languageServerLoader.addChild(languageServerLoaderBar);
		} else if (!AS3.as(hgLanguageServer.visible, Bool) && languageServerLoaderBar != null) {
			languageServerLoaderBar.parent.removeChild(languageServerLoaderBar);
			languageServerLoaderBar = null;
		}
	}

	private function onProjectBuildStarted(event:StatusBarEvent):Void {
		if (loaderBar == null) {
			lblBuilding.text = event.notificationSuffix + event.projectName;
			btnStop.includeInLayout = btnStop.visible = event.isShowStopButton;

			loaderBar = new LoadingBar();
			baseLoader.addChild(loaderBar);

			hgProjectBuild.visible = true;
		}
	}

	private function onProjectBuildEnded(event:StatusBarEvent):Void {
		if (loaderBar != null) {
			loaderBar.parent.removeChild(loaderBar);
			loaderBar = null;
			hgProjectBuild.visible = false;
		}
	}

	private function onProjectDebugStarted(event:StatusBarEvent):Void {
		lblDebugging.text = event.notificationSuffix + event.projectName;
		hgProjectDebug.visible = true;
	}

	private function onProjectDebugEnded(event:StatusBarEvent):Void {
		hgProjectDebug.visible = false;
	}

	private function onTerminateBuild(event:MouseEvent):Void {
		dispatcher.dispatchEvent(new StatusBarEvent(StatusBarEvent.PROJECT_BUILD_TERMINATE));
	}

	//  end scripts

	//  supporting function definitions for properties, events, styles, effects
	private function _MoonshineStatusBar_HGroup1_i():spark.components.HGroup {
		var temp:spark.components.HGroup = new spark.components.HGroup();
		temp.left = 10;
		temp.verticalAlign = 'middle';
		temp.verticalCenter = 0;
		temp.autoLayout = true;
		temp.gap = 6;
		temp.visible = false;
		temp.mxmlContent = [_MoonshineStatusBar_SpriteVisualElement1_i(), _MoonshineStatusBar_Label1_i()];
		temp.id = 'hgLanguageServer';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		hgLanguageServer = temp;
		mx.binding.BindingManager.executeBindings(this, 'hgLanguageServer', hgLanguageServer);
		return temp;
	}

	private function _MoonshineStatusBar_SpriteVisualElement1_i():spark.core.SpriteVisualElement {
		var temp:spark.core.SpriteVisualElement = new spark.core.SpriteVisualElement();
		temp.width = 32;
		temp.height = 12;
		temp.initialized(this, 'languageServerLoader');
		languageServerLoader = temp;
		mx.binding.BindingManager.executeBindings(this, 'languageServerLoader', languageServerLoader);
		return temp;
	}

	private function _MoonshineStatusBar_Label1_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.setStyle('fontSize', 11);
		temp.setStyle('paddingTop', 3);
		temp.setStyle('color', 3355443);
		temp.id = 'lblLanguageServer';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		lblLanguageServer = temp;
		mx.binding.BindingManager.executeBindings(this, 'lblLanguageServer', lblLanguageServer);
		return temp;
	}

	private function _MoonshineStatusBar_HGroup2_i():spark.components.HGroup {
		var temp:spark.components.HGroup = new spark.components.HGroup();
		temp.right = 10;
		temp.verticalAlign = 'middle';
		temp.verticalCenter = 0;
		temp.autoLayout = true;
		temp.gap = 6;
		temp.visible = false;
		temp.mxmlContent = [_MoonshineStatusBar_Label2_i(), _MoonshineStatusBar_SpriteVisualElement2_i(), _MoonshineStatusBar_Image1_i()];
		temp.id = 'hgProjectBuild';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		hgProjectBuild = temp;
		mx.binding.BindingManager.executeBindings(this, 'hgProjectBuild', hgProjectBuild);
		return temp;
	}

	private function _MoonshineStatusBar_Label2_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.setStyle('fontSize', 11);
		temp.setStyle('paddingTop', 3);
		temp.setStyle('color', 3355443);
		temp.id = 'lblBuilding';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		lblBuilding = temp;
		mx.binding.BindingManager.executeBindings(this, 'lblBuilding', lblBuilding);
		return temp;
	}

	private function _MoonshineStatusBar_SpriteVisualElement2_i():spark.core.SpriteVisualElement {
		var temp:spark.core.SpriteVisualElement = new spark.core.SpriteVisualElement();
		temp.width = 32;
		temp.height = 12;
		temp.initialized(this, 'baseLoader');
		baseLoader = temp;
		mx.binding.BindingManager.executeBindings(this, 'baseLoader', baseLoader);
		return temp;
	}

	private function _MoonshineStatusBar_Image1_i():spark.components.Image {
		var temp:spark.components.Image = new spark.components.Image();
		temp.source = _embed_mxml__elements_images_icoStop_png_575519719;
		temp.addEventListener('click', __btnStop_click);
		temp.id = 'btnStop';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		btnStop = temp;
		mx.binding.BindingManager.executeBindings(this, 'btnStop', btnStop);
		return temp;
	}

	/**
	 * @private
	 **/
	public function __btnStop_click(event:flash.events.MouseEvent):Void {
		onTerminateBuild(event);
	}

	private function _MoonshineStatusBar_HGroup3_i():spark.components.HGroup {
		var temp:spark.components.HGroup = new spark.components.HGroup();
		temp.right = 10;
		temp.verticalAlign = 'middle';
		temp.verticalCenter = 0;
		temp.autoLayout = true;
		temp.gap = 6;
		temp.visible = false;
		temp.mxmlContent = [_MoonshineStatusBar_Label3_i(), _MoonshineStatusBar_Image2_c()];
		temp.id = 'hgProjectDebug';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		hgProjectDebug = temp;
		mx.binding.BindingManager.executeBindings(this, 'hgProjectDebug', hgProjectDebug);
		return temp;
	}

	private function _MoonshineStatusBar_Label3_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.setStyle('fontSize', 11);
		temp.setStyle('paddingTop', 3);
		temp.setStyle('color', 3355443);
		temp.id = 'lblDebugging';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		lblDebugging = temp;
		mx.binding.BindingManager.executeBindings(this, 'lblDebugging', lblDebugging);
		return temp;
	}

	private function _MoonshineStatusBar_Image2_c():spark.components.Image {
		var temp:spark.components.Image = new spark.components.Image();
		temp.source = _embed_mxml__elements_images_icoStop_png_575519719;
		temp.addEventListener('click', ___MoonshineStatusBar_Image2_click);
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		return temp;
	}

	/**
	 * @private
	 **/
	public function ___MoonshineStatusBar_Image2_click(event:flash.events.MouseEvent):Void {
		onTerminateBuild(event);
	}

	/**
	 * @private
	 **/
	public function ___MoonshineStatusBar_Group1_creationComplete(event:mx.events.FlexEvent):Void {
		onCreation();
	}

	//  embed carrier vars
	@:meta(Embed(source = '/elements/images/icoStop.png'))
	private var _embed_mxml__elements_images_icoStop_png_575519719:Class<Dynamic>;

}

//  end package def