/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    components.renderers
 *  Class:      RecentProjectRenderer
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineSharedCore/src/components/renderers/RecentProjectRenderer.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:25:47 MSK
 */

package components.renderers;

import actionScripts.valueObjects.ProjectReferenceVO;

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.Mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.HGroup;
import spark.components.Label;

//  begin class def
class RecentProjectRenderer extends spark.components.HGroup {

	//  instance variables
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var lbl:spark.components.Label;

	//  type-import dummies

	//  constructor (Flex display object)
	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		// layer initializers

		// properties
		this.percentWidth = 100.0;
		this.horizontalAlign = 'right';
		this.mxmlContent = [_RecentProjectRenderer_Label1_i()];

		// events
		this.addEventListener('creationComplete', ___RecentProjectRenderer_HGroup1_creationComplete);

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings

		return factory;
	}

	//  initialize()
	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	//  scripts
	//  <Script>, line 25 - 45

	public static inline var RECENT_PROJECT_RENDERER_CLICK:String = 'RECENT_PROJECT_RENDERER_CLICK';

	public var project:ProjectReferenceVO;

	private function init():Void {
		lbl.removeEventListener(MouseEvent.CLICK, handleClick);
		lbl.addEventListener(MouseEvent.CLICK, handleClick);

		lbl.text = project.name;
	}

	private function handleClick(event:Event):Void {
		dispatchEvent(new Event(RECENT_PROJECT_RENDERER_CLICK, true, false));
	}

	//  end scripts

	//  supporting function definitions for properties, events, styles, effects
	private function _RecentProjectRenderer_Label1_i():spark.components.Label {
		var temp:spark.components.Label = new spark.components.Label();
		temp.maxDisplayedLines = 1;
		temp.useHandCursor = true;
		temp.buttonMode = true;
		temp.mouseChildren = false;
		temp.percentWidth = 100.0;
		temp.setStyle('paddingTop', 4);
		temp.setStyle('paddingLeft', 3);
		temp.setStyle('paddingRight', 3);
		temp.setStyle('paddingBottom', 0);
		temp.setStyle('fontFamily', 'DejaVuSans');
		temp.setStyle('fontSize', 15);
		temp.setStyle('textAlign', 'right');
		temp.addEventListener('mouseOver', __lbl_mouseOver);
		temp.addEventListener('mouseOut', __lbl_mouseOut);
		temp.addEventListener('creationComplete', __lbl_creationComplete);
		temp.id = 'lbl';
		if (!AS3.as(temp.document, Bool)) {
			temp.document = this;
		}
		lbl = temp;
		mx.binding.BindingManager.executeBindings(this, 'lbl', lbl);
		return temp;
	}

	/**
	 * @private
	 **/
	public function __lbl_mouseOver(event:flash.events.MouseEvent):Void {
		event.target.setStyle('color', 0XFFFFFF);
	}

	/**
	 * @private
	 **/
	public function __lbl_mouseOut(event:flash.events.MouseEvent):Void {
		event.target.setStyle('color', 0XD6D6D6);
	}

	/**
	 * @private
	 **/
	public function __lbl_creationComplete(event:mx.events.FlexEvent):Void {
		event.target.setStyle('color', 0XD6D6D6);
	}

	/**
	 * @private
	 **/
	public function ___RecentProjectRenderer_HGroup1_creationComplete(event:mx.events.FlexEvent):Void {
		init();
	}

}

//  end package def