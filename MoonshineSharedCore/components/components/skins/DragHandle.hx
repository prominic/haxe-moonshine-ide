/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    components.skins
 *  Class:      DragHandle
 *  Source:     /Users/axgord/dev/Moonshine-IDE/ide/MoonshineSharedCore/src/components/skins/DragHandle.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2019.04.22 23:25:49 MSK
 */

package components.skins;

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.Mx_internal;
import mx.filters.*;
import mx.graphics.SolidColor;
import mx.styles.*;
import spark.components.Group;
import spark.primitives.Rect;

//  begin class def
class DragHandle extends spark.components.Group implements mx.binding.IBindingClient {

	//  instance variables
	/**
	 * @private
	 **/
	public var _DragHandle_Rect1:spark.primitives.Rect;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor1:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor2:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor3:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor4:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor5:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor6:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor7:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor8:mx.graphics.SolidColor;

	/**
	 * @private
	 **/
	public var _DragHandle_SolidColor9:mx.graphics.SolidColor;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var dotColor:Int = 0;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var fillAlpha:Float;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var fillColor:Int = 0;

	@:meta(Inspectable())
	@:meta(Bindable())
	/**
	 * @private
	 **/
	public var fillVisible:Bool = false;

	//  type-import dummies

	//  constructor (Flex display object)
	/**
	 * @private
	 **/
	public function new() {
		super();

		// mx_internal::_document = this;

		var bindings:Array<Dynamic> = _DragHandle_bindingsSetup();
		var watchers:Array<Dynamic> = [];

		var target:Dynamic = this;

		if (_watcherSetupUtil == null) {
			var watcherSetupUtilClass:Dynamic = Type.resolveClass('_components_skins_DragHandleWatcherSetupUtil');
			Reflect.field(watcherSetupUtilClass, 'init')(null);
		}

		_watcherSetupUtil.setup(this,
				function(propertyName:String):Dynamic {
					return Reflect.field(target, propertyName);
				},
				function(propertyName:String):Dynamic {
					return Reflect.getProperty(DragHandle, propertyName);
				},
				bindings,
				watchers
		);

		// mx_internal::_bindings =  //  mx_internal::_bindings.concat(bindings);
		// mx_internal::_watchers =  //  mx_internal::_watchers.concat(watchers);

		// layer initializers

		// properties
		this.height = 18;
		this.width = 10;
		this.mxmlContent = [_DragHandle_Rect1_i(), _DragHandle_Rect2_c(), _DragHandle_Rect3_c(), _DragHandle_Rect4_c(), _DragHandle_Rect5_c(), _DragHandle_Rect6_c(), _DragHandle_Rect7_c(), _DragHandle_Rect8_c(), _DragHandle_Rect9_c()];
		_DragHandle_uint1_i();
		_DragHandle_Number1_i();
		_DragHandle_uint2_i();
		_DragHandle_Boolean1_i();

		// events

		for (i in 0...bindings.length) {
			AS3.as(bindings[i], Binding).execute();
		}

	}

	/**
	 * @private
	 **/
	private var __moduleFactoryInitialized:Bool = false;

	/**
	 * @private
	 * Override the module factory so we can defer setting style declarations
	 * until a module factory is set. Without the correct module factory set
	 * the style declaration will end up in the wrong style manager.
	 **/
	override private function set_moduleFactory(factory:IFlexModuleFactory):IFlexModuleFactory {
		super.moduleFactory = factory;

		if (__moduleFactoryInitialized) {
			return factory;
		}

		__moduleFactoryInitialized = true;

		// our style settings

		return factory;
	}

	//  initialize()
	/**
	 * @private
	 **/
	override public function initialize():Void {
		super.initialize();
	}

	//  scripts
	//  end scripts

	//  supporting function definitions for properties, events, styles, effects
	private function _DragHandle_uint1_i():Int {
		var temp:Int = 9145227;
		dotColor = temp;
		mx.binding.BindingManager.executeBindings(this, 'dotColor', dotColor);
		return temp;
	}

	private function _DragHandle_Number1_i():Float {
		var temp:Float = 0.2;
		fillAlpha = temp;
		mx.binding.BindingManager.executeBindings(this, 'fillAlpha', fillAlpha);
		return temp;
	}

	private function _DragHandle_uint2_i():Int {
		var temp:Int = 16777215;
		fillColor = temp;
		mx.binding.BindingManager.executeBindings(this, 'fillColor', fillColor);
		return temp;
	}

	private function _DragHandle_Boolean1_i():Bool {
		var temp:Bool = true;
		fillVisible = temp;
		mx.binding.BindingManager.executeBindings(this, 'fillVisible', fillVisible);
		return temp;
	}

	private function _DragHandle_Rect1_i():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.percentHeight = 100.0;
		temp.percentWidth = 100.0;
		temp.fill = _DragHandle_SolidColor1_i();
		temp.initialized(this, '_DragHandle_Rect1');
		_DragHandle_Rect1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_Rect1', _DragHandle_Rect1);
		return temp;
	}

	private function _DragHandle_SolidColor1_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor1 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor1', _DragHandle_SolidColor1);
		return temp;
	}

	private function _DragHandle_Rect2_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 2;
		temp.top = 2;
		temp.fill = _DragHandle_SolidColor2_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor2_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor2 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor2', _DragHandle_SolidColor2);
		return temp;
	}

	private function _DragHandle_Rect3_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 6;
		temp.top = 2;
		temp.fill = _DragHandle_SolidColor3_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor3_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor3 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor3', _DragHandle_SolidColor3);
		return temp;
	}

	private function _DragHandle_Rect4_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 2;
		temp.top = 6;
		temp.fill = _DragHandle_SolidColor4_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor4_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor4 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor4', _DragHandle_SolidColor4);
		return temp;
	}

	private function _DragHandle_Rect5_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 6;
		temp.top = 6;
		temp.fill = _DragHandle_SolidColor5_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor5_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor5 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor5', _DragHandle_SolidColor5);
		return temp;
	}

	private function _DragHandle_Rect6_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 2;
		temp.top = 10;
		temp.fill = _DragHandle_SolidColor6_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor6_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor6 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor6', _DragHandle_SolidColor6);
		return temp;
	}

	private function _DragHandle_Rect7_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 6;
		temp.top = 10;
		temp.fill = _DragHandle_SolidColor7_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor7_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor7 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor7', _DragHandle_SolidColor7);
		return temp;
	}

	private function _DragHandle_Rect8_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 2;
		temp.top = 14;
		temp.fill = _DragHandle_SolidColor8_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor8_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor8 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor8', _DragHandle_SolidColor8);
		return temp;
	}

	private function _DragHandle_Rect9_c():spark.primitives.Rect {
		var temp:spark.primitives.Rect = new spark.primitives.Rect();
		temp.height = 2;
		temp.width = 2;
		temp.left = 6;
		temp.top = 14;
		temp.fill = _DragHandle_SolidColor9_i();
		temp.initialized(this, null);
		return temp;
	}

	private function _DragHandle_SolidColor9_i():mx.graphics.SolidColor {
		var temp:mx.graphics.SolidColor = new mx.graphics.SolidColor();
		_DragHandle_SolidColor9 = temp;
		mx.binding.BindingManager.executeBindings(this, '_DragHandle_SolidColor9', _DragHandle_SolidColor9);
		return temp;
	}

	//  binding mgmt
	private function _DragHandle_bindingsSetup():Array<Dynamic> {
		var result:Array<Dynamic> = [];

		result[0] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_Rect1.visible', 'fillVisible');

		result[1] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor1.color', 'fillColor');

		result[2] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor1.alpha', 'fillAlpha');

		result[3] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor2.color', 'dotColor');

		result[4] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor3.color', 'dotColor');

		result[5] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor4.color', 'dotColor');

		result[6] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor5.color', 'dotColor');

		result[7] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor6.color', 'dotColor');

		result[8] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor7.color', 'dotColor');

		result[9] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor8.color', 'dotColor');

		result[10] = new mx.binding.Binding(this,
				null,
				null,
				'_DragHandle_SolidColor9.color', 'dotColor');

		return result;
	}

	/**
	 * @private
	 **/
	public static var watcherSetupUtil(never, set):IWatcherSetupUtil2;
	private static function set_watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):IWatcherSetupUtil2 {
		(DragHandle)._watcherSetupUtil = watcherSetupUtil;
		return watcherSetupUtil;
	}

	private static var _watcherSetupUtil:IWatcherSetupUtil2;

	//  embed carrier vars
	//  end embed carrier vars

	//  binding management vars
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindings:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _watchers:Array<Dynamic> = [];
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsByDestination:Dynamic = {};
	/**
	 * @private
	 **/
	@:ns('mx_internal') private var _bindingsBeginWithWord:Dynamic = {};

}

//  end package def